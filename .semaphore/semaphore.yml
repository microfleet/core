version: v1.0
name: Microfleet test & deploy
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004

fail_fast:
  stop:
    when: "branch != 'master'"

auto_cancel:
  running:
    when: "branch != 'master'"

global_job_config:
  prologue:
    commands:
      - set -e
      - sem-version node --lts
      - corepack enable
      - corepack install --global pnpm@9.x
      - checkout
      - cache restore node-$(checksum pnpm-lock.yaml)
      - pnpm i --frozen-lockfile --prefer-offline --ignore-scripts
      - cache store node-$(checksum pnpm-lock.yaml) $(pnpm store path)
      - cp ~/.env.aws-credentials ./packages/plugin-aws-elasticsearch/.env
      - sudo chgrp -hR +1000 node_modules # so that it matches node uid/gid in the docker container

  secrets:
  - name: aws-credentials
  env_vars:
  - name: BUILD_LIBRDKAFKA
    value: '0'
  - name: COREPACK_ENABLE_AUTO_PIN
    value: '0'

blocks:
  - name: build
    dependencies: []
    task:
      jobs:
      - name: build typescript project
        commands:
          - pnpm build
          - tar -czf intermediary-build.tgz ./packages/*/lib
          - artifact push workflow intermediary-build.tgz --expire-in 1d

  - name: tests
    dependencies: ["build"]
    run:
      when: "change_in('/packages/')"
    task:
      jobs:
      - name: run tests in each folder
        commands:
          - artifact pull workflow intermediary-build.tgz
          - tar -xzf intermediary-build.tgz -C ./
          - cd ./packages/$TEST_WORKSPACE_NAME
          - env UID=${UID} PNPM_STORE=$(dirname `pnpm store path`) pnpm test
        matrix:
        - env_var: TEST_WORKSPACE_NAME
          values: ["core", "core-types", "plugin-amqp", "plugin-aws-elasticsearch",
                   "plugin-consul", "plugin-couchdb", "plugin-dlock",
                   "plugin-elasticsearch", "plugin-hapi", "plugin-kafka", "plugin-kafka-types",
                   "plugin-knex", "plugin-logger", "plugin-prometheus",
                   "plugin-redis-cluster", "plugin-redis-core", "plugin-redis-sentinel",
                   "plugin-router", "plugin-router-amqp", "plugin-router-hapi",
                   "plugin-router-socketio", "plugin-socketio", "plugin-validator", "plugin-casl", "plugin-signed-request", "utils"]

  - name: release
    dependencies: ["tests"]
    skip:
      when: "branch != 'master'"
    task:
      secrets:
        - name: semantic-release
        - name: semaphore-git-deploy
      jobs:
      - name: release
        commands:
          - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' >> ~/.npmrc
          - artifact pull workflow intermediary-build.tgz
          - tar -xzf intermediary-build.tgz -C ./
          - git config --global user.email "semaphoreci@users.noreply.github.com"
          - git config --global user.name "semaphoreci"
          - chmod 600 ~/.ssh/id_rsa_git_deploy
          - ssh-add ~/.ssh/id_rsa_git_deploy
          - pnpm run version
          - pnpm release-it
