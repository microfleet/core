patch-package
--- a/node_modules/ioredis/built/cluster/index.js
+++ b/node_modules/ioredis/built/cluster/index.js
@@ -58,15 +58,19 @@ function Cluster(startupNodes, options) {
         if (_this.status !== 'disconnecting' && _this.subscriber === redis) {
             _this.selectSubscriber();
         }
+        debug('-node');
         _this.emit('-node', redis);
     });
     this.connectionPool.on('+node', function (redis) {
+        debug('+node');
         _this.emit('+node', redis);
     });
     this.connectionPool.on('drain', function () {
+        debug('drain');
         _this.setStatus('close');
     });
     this.connectionPool.on('nodeError', function (error) {
+        debug('nodeError');
         _this.emit('node error', error);
     });
     this.slots = [];
@@ -620,8 +624,14 @@ Cluster.prototype.getInfoFromNode = function (redis, callback) {
  * @private
  */
 Cluster.prototype._readyCheck = function (callback) {
+    var self = this;
     this.cluster('info', function (err, res) {
         if (err) {
+            // so that it selects another node
+            if (err.message === utils.CONNECTION_CLOSED_ERROR_MSG) {
+              debug('retry _readyCheck');
+              return process.nextTick(self._readyCheck.bind(self), callback);
+            }
             return callback(err);
         }
         if (typeof res !== 'string') {
