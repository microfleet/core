patch-package
--- a/node_modules/ioredis/built/cluster/index.js
+++ b/node_modules/ioredis/built/cluster/index.js
@@ -58,15 +58,19 @@ function Cluster(startupNodes, options) {
         if (_this.status !== 'disconnecting' && _this.subscriber === redis) {
             _this.selectSubscriber();
         }
+        debug('-node');
         _this.emit('-node', redis);
     });
     this.connectionPool.on('+node', function (redis) {
+        debug('+node');
         _this.emit('+node', redis);
     });
     this.connectionPool.on('drain', function () {
+        debug('drain');
         _this.setStatus('close');
     });
     this.connectionPool.on('nodeError', function (error) {
+        debug('nodeError');
         _this.emit('node error', error);
     });
     this.slots = [];
@@ -145,11 +149,17 @@ Cluster.prototype.connect = function () {
             this.manuallyClosing = false;
             this.setStatus('connect');
             if (this.options.enableReadyCheck) {
-                this._readyCheck(function (err, fail) {
+                this._readyCheck(function readyCheckCallback(err, fail) {
                     if (err || fail) {
                         debug('Ready check failed (%s). Reconnecting...', err || fail);
                         if (this.status === 'connect') {
-                            this.disconnect(true);
+                            debug('reconnect');
+                            if (!err || err.message !== utils.CONNECTION_CLOSED_ERROR_MSG) {
+                                this.disconnect(true);
+                            }
+                            else {
+                                this._readyCheck(readyCheckCallback.bind(this));
+                            }
                         }
                     }
                     else {
